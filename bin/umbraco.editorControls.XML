<?xml version="1.0"?>
<doc>
    <assembly>
        <name>umbraco.editorControls</name>
    </assembly>
    <members>
        <member name="T:umbraco.editorControls.colorPicker">
            <summary>
            Summary description for colorPicker.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.colorpicker.ColorPickerDataType">
            <summary>
            Summary description for ColorPickerDataType.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.datefieldmultiple.DataTypeDatefieldMultiple">
            <summary>
            Summary description for DataTypeDatefieldMultiple.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.datepicker.DateDataType">
            <summary>
            Summary description for DateDataType.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.datepicker.DateData">
            <summary>
            Summary description for DateData.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.dateField">
            <summary>
            Summary description for dateField.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.DefaultDataKeyValue">
            <summary>
            Summary description for cms.businesslogic.datatype.DefaultDataKeyValue.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.DefaultDataKeyValue.ToXMl(System.Xml.XmlDocument)">
            <summary>
            Ov
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.DefaultPrevalueEditor.#ctor(umbraco.cms.businesslogic.datatype.BaseDataType,System.Boolean)">
            <summary>
            The default editor for editing the build-in pre values in umbraco
            </summary>
            <param name="DataType">The DataType to be parsed</param>
            <param name="DisplayTextBox">Whether to use the default text box</param>
        </member>
        <member name="M:umbraco.editorControls.DefaultPrevalueEditor.#ctor(umbraco.editorControls.BaseDataType,System.Boolean)">
            <summary>
            For backwards compatibility, should be replaced in your extension with the constructor that
            uses the BaseDataType from the cms.businesslogic.datatype namespace
            </summary>
            <param name="DataType">The DataType to be parsed (note: the BaseDataType from editorControls is obsolete)</param>
            <param name="DisplayTextBox">Whether to use the default text box</param>
        </member>
        <member name="T:umbraco.editorControls.dictionaryPicker.dictionaryPicker">
            <summary>
            Summary description for dictionaryPicker.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.dictionaryPicker.dictionaryPickerDataType">
            <summary>
            Summary description for dictionaryPickerDataType.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.dropdownlist.DropdownListDataType">
            <summary>
            Summary description for ColorPickerDataType.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.dropdownlist.DropdownListKeysDataType">
            <summary>
            Summary description for ColorPickerDataType.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.folderbrowser.DataTypeFolderBrowser">
            <summary>
            Summary description for DataTypeFolderbrowser.
            </summary>
            <summary>
            Summary description for DataTypeUploadField.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.folderBrowser">
            <summary>
            Summary description for folderBrowser.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.KeyValuePrevalueEditor">
            <summary>
            Summary description for KeyValuePrevalueEditor.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.label.DataTypeNoEdit">
            <summary>
            Summary description for DataTypeNoEdit.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.dropdownMultiple">
            <summary>
            Summary description for dropdownMultiple.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.listbox.ListBoxDataType">
            <summary>
            Summary description for ColorPickerDataType.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.listbox.ListBoxKeysDataType">
            <summary>
            Summary description for ColorPickerDataType.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.mediaChooser">
            <summary>
            Summary description for mediaChooser.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.mediapicker.MemberPickerDataType">
            <summary>
            Summary description for MemberPickerDataType.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.memberPicker">
            <summary>
            Summary description for memberPicker.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.memberPicker.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="T:umbraco.editorControls.memberpicker.MemberPickerDataType">
            <summary>
            Summary description for MemberPickerDataType.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.numberfield.DataInteger">
            <summary>
            Summary description for DataInteger.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.numberfield.IDataTypenteger">
            <summary>
            Summary description for IDataTypenteger.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.pagePicker">
            <summary>
            Summary description for pagePicker.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.pagepicker.PagePickerDataType">
            <summary>
            Summary description for PagePickerDataType.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.radiobuttonlist.RadioButtonListDataType">
            <summary>
            Summary description for ColorPickerDataType.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.relatedlinks.PagePickerDataExtractor">
            <summary>
            Allows for the extraction of the link ID for the selected node of the
            PagePicker (aka content picker) class for integration of the PagePicker
            in another datatype.
            This class replaces the database linkup that normally holds the data and
            stores the data locally in memory and allows for easy access to the
            data (after the IDataEditor has performed a save()).
            This class was not designed for, but might work equally well for other datatypes.
            </summary>
        </member>
        <member name="P:umbraco.editorControls.relatedlinks.RelatedLinksDataEditor.IsValid">
            <summary>
            Internal logic for validation controls to detect whether or not it's valid (has to be public though) 
            </summary>
            <value>Am I valid?</value>
        </member>
        <member name="T:umbraco.editorControls.simpleEditor.SimpleEditor">
            <summary>
            Summary description for simpleEditor.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.simpleEditor.simpleEditorDataType">
            <summary>
            Summary description for simpleEditorDataType.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tags.library.getEverythingWithTags(System.String)">
             <summary>
             Gets everything (content, media, members) in Umbraco with the specified tags.
             It returns the found nodes as:
             <root>
             <node><data/>...</node>
             <node><data/>...</node>
             etc...
             </root>
             </summary>
             <param name="tags">Commaseparated tags.</param>
             <returns>
             A XpathNodeIterator
            </returns>
        </member>
        <member name="M:umbraco.editorControls.tags.library.getContentsWithTags(System.String)">
             <summary>
             Gets all content nodes in Umbraco with the specified tag.
             It returns the found nodes as:
             <root>
             <node><data/>...</node>
             <node><data/>...</node>
             etc...
             </root>
             </summary>
             <param name="tags">Commaseparated tags.</param>
             <returns>
             A XpathNodeIterator
            </returns>
        </member>
        <member name="M:umbraco.editorControls.tags.library.getMembersWithTags(System.String)">
             <summary>
             Returns all members (does not care about groups and types) in Umbraco with the specified tag.
             It returns the found nodes as:
             <root>
             <node><data/>...</node>
             <node><data/>...</node>
             etc...
             </root>
             </summary>
             <param name="tags">Comma separated tags.</param>
             <returns>
             A XpathNodeIterator
            </returns>
        </member>
        <member name="M:umbraco.editorControls.tags.library.getMediaWithTags(System.String)">
             <summary>
             Returns all media nodes in Umbraco with the specified tag.
             It returns the found nodes as:
             <root>
             <node><data/>...</node>
             <node><data/>...</node>
             etc...
             </root>
             </summary>
             <param name="tags">Commaseparated tags.</param>
             <returns>
             A XpathNodeIterator
            </returns>
        </member>
        <member name="M:umbraco.editorControls.tags.library.GetSqlStringArray(System.String)">
            <summary>
            Converts the array to an SQL escaped array.
            </summary>
            <param name="commaSeparatedArray">An array of comma separated values.</param>
            <returns>SQL escaped array values.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:umbraco.editorControls.tags.library.getAllTags" -->
        <!-- Badly formed XML comment ignored for member "M:umbraco.editorControls.tags.library.getAllTagsInGroup(System.String)" -->
        <member name="M:umbraco.editorControls.tags.library.GetTagsFromNodeAsITags(System.Int32)">
            <summary>
            Gets the tags from node as ITag objects.
            </summary>
            <param name="nodeId">The node id.</param>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.tags.library.GetTagsFromGroupAsITags(System.String)">
            <summary>
            Gets the tags from group as ITag objects.
            </summary>
            <param name="group">The group.</param>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.tags.library.GetTagsAsITags">
            <summary>
            Gets all the tags as ITag objects
            </summary>
            <param name="nodeId">The node id.</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:umbraco.editorControls.tags.library.getTagsFromNode(System.String)" -->
        <member name="T:umbraco.editorControls.tinyMCE3.webcontrol.plugin.ConfigSection">
            <summary>
            Description of ConfigSection.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.ConfigSection.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.ConfigSection.InstallPath">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.ConfigSection.Mode">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.ConfigSection.GlobalSettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.ConfigSection.GzipEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.ConfigSection.GzipExpiresOffset">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.ConfigSection.GzipDiskCache">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.ConfigSection.GzipCachePath">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.ConfigSection.GzipNoCompression">
            <summary>
            
            </summary>
        </member>
        <member name="T:umbraco.editorControls.tinyMCE3.webcontrol.plugin.GzipCompressor">
            <summary>
            Description of GzipCompressor.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.GzipCompressor.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.GzipCompressor.AddFile(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.GzipCompressor.AddData(System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.GzipCompressor.Compress(System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="to_stream"></param>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.GzipCompressor.NoCompression">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.GzipCompressor.DiskCache">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.GzipCompressor.CachePath">
            <summary>
            
            </summary>
        </member>
        <member name="T:umbraco.editorControls.tinyMCE3.webcontrol.plugin.GzipModule">
            <summary>
            Description of HttpHandler.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.tinyMCE3.webcontrol.plugin.IModule">
            <summary>
            Description of IAction.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.IModule.ProcessRequest(System.Web.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.GzipModule.ProcessRequest(System.Web.HttpContext)">
            <summary></summary>
            <param name="context">Request context.</param>
        </member>
        <member name="T:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSON">
            <summary>
            Description of JSON.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSON.SerializeRPC(System.String,System.Object,System.Object,System.IO.Stream)">
            <summary>
            
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSON.WriteObject(System.IO.TextWriter,System.Object)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="obj"></param>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSON.ParseJSON(System.IO.TextReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSON.ParseRPC(System.IO.TextReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONRpcCall">
            <summary>
            
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONRpcCall.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONRpcCall.Method">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONRpcCall.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONRpcCall.Args">
            <summary>
            
            </summary>
        </member>
        <member name="T:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONToken">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONToken.Boolean">
            <summary> </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONToken.Integer">
            <summary> </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONToken.String">
            <summary> </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONToken.Null">
            <summary> </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONToken.Float">
            <summary> </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONToken.StartArray">
            <summary> </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONToken.EndArray">
            <summary> </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONToken.PropertyName">
            <summary> </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONToken.StartObject">
            <summary> </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONToken.EndObject">
            <summary> </summary>
        </member>
        <member name="T:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONReader">
            <summary>
             Description of JSONReader.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONReader.#ctor(System.IO.TextReader)">
            <summary>
            
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONReader.Read">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONReader.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONReader.Location">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONReader.TokenType">
            <summary>
            
            </summary>
        </member>
        <member name="P:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONReader.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONLocation">
            <summary>
            
            </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONLocation.InArray">
            <summary> </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONLocation.InObject">
            <summary> </summary>
        </member>
        <member name="F:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONLocation.Normal">
            <summary> </summary>
        </member>
        <member name="T:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter">
            <summary>
            Description of JSONWriter.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter.#ctor(System.IO.TextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter.WriteStartObject">
            <summary>
            
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter.WriteEndObject">
            <summary>
            
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter.WriteStartArray">
            <summary>
            
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter.WriteEndArray">
            <summary>
            
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter.WritePropertyName(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter.WriteProperty(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="obj"></param>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter.WriteValue(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter.WriteNull">
            <summary>
            
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter.Close">
            <summary>
            
            </summary>
        </member>
        <member name="M:umbraco.editorControls.tinyMCE3.webcontrol.plugin.JSONWriter.EncodeString(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.tinymce.webcontrol.TinyMCE.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Draws the editor
            </summary>
            <param name="outWriter">The writer to draw the editor to</param>
        </member>
        <member name="M:umbraco.editorControls.tinymce.webcontrol.TinyMCE.OnTextChanged(System.EventArgs)">
            <summary>
            Event for text change.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:umbraco.editorControls.tinymce.webcontrol.TinyMCE.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Called when a postback occurs on the page the control is placed at
            </summary>
            <param name="postDataKey">The key of the editor data</param>
            <param name="postCollection">All the posted data</param>
            <returns></returns>
        </member>
        <member name="M:umbraco.editorControls.tinymce.webcontrol.TinyMCE.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            Raises an event when postback occurs
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:umbraco.editorControls.tinymce.webcontrol.TinyMCE.Text" -->
        <!-- Badly formed XML comment ignored for member "P:umbraco.editorControls.tinymce.webcontrol.TinyMCE.Rows" -->
        <!-- Badly formed XML comment ignored for member "P:umbraco.editorControls.tinymce.webcontrol.TinyMCE.Cols" -->
        <!-- Badly formed XML comment ignored for member "P:umbraco.editorControls.tinymce.webcontrol.TinyMCE.JavascriptLocation" -->
        <member name="E:umbraco.editorControls.tinymce.webcontrol.TinyMCE.TextChanged">
            <summary>
            Raises an event when the text in the editor changes.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.ultimatepicker.ultimatePickerDataEditor.addListControlNode(umbraco.cms.businesslogic.Content,System.Int32,System.Boolean,System.Web.UI.WebControls.ListControl,System.String[])">
            <summary>
            Adds sub nodes to the ListControl object passed into the method, based on the Content node passed in
            </summary>
            <param name="node">The node whos sub nodes are to be added to the ListControl</param>
            <param name="level">The level of the current node</param>
            <param name="showGrandChildren">Boolean determining if grand children should be displayed as well</param>
            <param name="control">The ListControl the nodes must be added to</param>
            <param name="documentAliasFilter">String representing the documentTypeAlias that should be filtered for. If empty no filter is applied</param>
        </member>
        <member name="M:umbraco.editorControls.ultimatepicker.ultimatePickerDataEditor.setupAutoComplete(System.Int32)">
            <summary>
            Sets up the autocomplete functionality
            </summary>
        </member>
        <member name="P:umbraco.editorControls.ultimatepicker.ultimatePickerDataEditor.IsValid">
            <summary>
            Internal logic for validation controls to detect whether or not it's valid (has to be public though) 
            </summary>
            <value>Am I valid?</value>
        </member>
        <member name="M:umbraco.editorControls.ultimatepicker.ultimatePickerPrevalueEditor.validateFilterInput(System.String)">
            <summary>
            Validates and clears the filter input from errorneous entries
            </summary>
            <param name="filterInput">The filter string to be validated</param>
            <returns>A validated filtered comma separated string</returns>
        </member>
        <member name="T:umbraco.editorControls.ultraSimpleMailer.mailerConfiguratorPreValueEditor">
            <summary>
            Summary description for mailerConfiguratorPreValueEditor.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.ultraSimpleMailer.mailerHelper">
            <summary>
            Summary description for mailerHelper.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.ultraSimpleMailer.mailerLogic">
            <summary>
            Summary description for mailerLogic.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.ultraSimpleMailer.ultraSimpleMailerDataType">
            <summary>
            Summary description for ultraSimpleMailerDataType.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.ultraSimpleMailer.ultraSimpleMailerEditor">
            <summary>
            Summary description for ultraSimpleMailerEditor.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.uploadfield.DataTypeUploadField">
            <summary>
            Summary description for DataTypeUploadField.
            </summary>
        </member>
        <member name="M:umbraco.editorControls.uploadField.FindControlRecursive``1(System.Web.UI.Control,System.String)">
            <summary>
            Recursively finds a control with the specified identifier.
            </summary>
            <typeparam name="T">
            The type of control to be found.
            </typeparam>
            <param name="parent">
            The parent control from which the search will start.
            </param>
            <param name="id">
            The identifier of the control to be found.
            </param>
            <returns>
            The control with the specified identifier, otherwise <see langword="null"/> if the control 
            is not found.
            </returns>
        </member>
        <member name="M:umbraco.editorControls.uploadField.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="P:umbraco.editorControls.uploadField.IsValid">
            <summary>
            Internal logic for validation controls to detect whether or not it's valid (has to be public though) 
            </summary>
            <value>Am I valid?</value>
        </member>
        <member name="T:umbraco.editorControls.wysiwyg.editor">
            <summary>
            Generates a field for typing numeric data
            </summary>
        </member>
        <member name="M:umbraco.editorControls.wysiwyg.editor.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="T:umbraco.editorControls.wysiwyg.WysiwygDataType">
            <summary>
            Summary description for WysiwygDataType.
            </summary>
        </member>
        <member name="T:umbraco.editorControls.yesNo">
            <summary>
            Generates a radiolist of yes and no for boolean fields
            </summary>
        </member>
        <member name="M:umbraco.editorControls.yesNo.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="T:umbraco.editorControls.yesno.YesNoDataType">
            <summary>
            Summary description for YesNoDataType.
            </summary>
        </member>
    </members>
</doc>
